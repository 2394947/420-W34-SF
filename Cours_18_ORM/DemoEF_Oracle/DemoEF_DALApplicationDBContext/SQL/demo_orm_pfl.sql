-- Créez l'utilisation pfleon, connectez-vous avec et exécutez le script suivant
-- CREATE USER pfleon IDENTIFIED BY "Bonjour01.+";
-- GRANT ALL PRIVILEGES TO pfleon;

BEGIN
    EXECUTE IMMEDIATE 'ALTER TABLE ORM_ADRESSE DROP CONSTRAINT FK_ADRESSE_PROPRIETAIRE_ADRESSE';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'ALTER TABLE ORM_PERSONNE DROP CONSTRAINT FK_PERSONNE_ADRESSE_ACTUELLE';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE ORM_ADRESSE';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE ORM_PERSONNE';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

CREATE TABLE ORM_PERSONNE (
    PERSONNEID NUMBER(7,0) GENERATED BY DEFAULT ON NULL AS IDENTITY START WITH 1000 PRIMARY KEY,
    NOM VARCHAR2(30) NOT NULL,
    PRENOM VARCHAR(30) NOT NULL
);

CREATE TABLE ORM_ADRESSE (
    ADRESSEID NUMBER(7, 0) GENERATED BY DEFAULT ON NULL AS IDENTITY START WITH 1000 PRIMARY KEY,
    PERSONNEID  NUMBER(7,0) NOT NULL,
    NOCIVIQUE VARCHAR2(10) NOT NULL,
    ODONYME VARCHAR2(50) NOT NULL,
    VILLE VARCHAR2(50) NOT NULL,
    CONSTRAINT FK_ADRESSE_PROPRIETAIRE_ADRESSE FOREIGN KEY (PERSONNEID) REFERENCES ORM_PERSONNE(PERSONNEID)
);

ALTER TABLE ORM_PERSONNE
ADD ADRESSEACTUELLEID NUMBER(7, 0) NULL;

ALTER TABLE ORM_PERSONNE
ADD CONSTRAINT FK_PERSONNE_ADRESSE_ACTUELLE FOREIGN KEY (ADRESSEACTUELLEID) REFERENCES ORM_ADRESSE(ADRESSEID);

INSERT INTO ORM_PERSONNE(PERSONNEID, NOM, PRENOM) VALUES (1, 'Vière', 'Marie');
INSERT INTO ORM_PERSONNE(PERSONNEID, NOM, PRENOM) VALUES (2, 'Éparbal', 'Gille');
INSERT INTO ORM_PERSONNE(NOM, PRENOM) VALUES ('Terrieur', 'Alex');

INSERT INTO ORM_ADRESSE(ADRESSEID, PERSONNEID, NOCIVIQUE, ODONYME, VILLE) VALUES (1, 1, '123', 'Chat', 'Lévis');
INSERT INTO ORM_ADRESSE(ADRESSEID, PERSONNEID, NOCIVIQUE, ODONYME, VILLE) VALUES (2, 1, '123', 'Chat', 'Québec');
INSERT INTO ORM_ADRESSE(ADRESSEID, PERSONNEID, NOCIVIQUE, ODONYME, VILLE) VALUES (3, 1, '123', 'Chat', 'Montréal');

UPDATE ORM_PERSONNE SET ADRESSEACTUELLEID = 1 WHERE PERSONNEID = 1;

COMMIT;

BEGIN
    EXECUTE IMMEDIATE 'DROP FUNCTION OBTENIR_ADRESSE_VILLE';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP TYPE OBJ_ORM_ADRESSE_TBL';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/

BEGIN
    EXECUTE IMMEDIATE 'DROP TYPE OBJ_ORM_ADRESSE';
EXCEPTION
    WHEN OTHERS THEN NULL;
END;
/
CREATE OR REPLACE TYPE OBJ_ORM_ADRESSE AS OBJECT (
    ADRESSEID NUMBER(7, 0),
    PERSONNEID  NUMBER(7,0),
    NOCIVIQUE VARCHAR2(10),
    ODONYME VARCHAR2(50),
    VILLE VARCHAR2(50)
);
/

CREATE OR REPLACE TYPE OBJ_ORM_ADRESSE_TBL AS TABLE OF OBJ_ORM_ADRESSE;
/

CREATE OR REPLACE FUNCTION OBTENIR_ADRESSE_VILLE(p_ville VARCHAR2)
RETURN OBJ_ORM_ADRESSE_TBL
AS
    resultat OBJ_ORM_ADRESSE_TBL;
BEGIN
    resultat := OBJ_ORM_ADRESSE_TBL();
    SELECT OBJ_ORM_ADRESSE(ADRESSEID, PERSONNEID, NOCIVIQUE, ODONYME, VILLE)
    BULK COLLECT INTO resultat
    FROM ORM_ADRESSE
    WHERE VILLE LIKE '%' || p_ville ||  '%';
    
    RETURN resultat;
END;
/

SELECT * FROM ORM_PERSONNE;
SELECT * FROM ORM_ADRESSE;

SELECT * FROM TABLE(OBTENIR_ADRESSE_VILLE('é'));